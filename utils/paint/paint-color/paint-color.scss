.paint-color {
  // Константы
  @mixin mod($mod) {
    @include modifier("paint-color", $mod){
      @content;
    }
  }
  @mixin hover() {
    .paint-color__item:hover & {
      @content;
    }
  }
  @mixin selected($neighbor: false) {
    $selector: (unquote(".paint-color__item-input:checked") unquote("~"));
    @if not($neighbor) {
      $selector: append($selector, unquote("*"));

    }

    #{$selector} & {
      @content;
    }
  }

  &__cont {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
  }
  &__item {
    flex: 0 0 vw(24px);
    width: vw(24px);
    margin: vw( 0 20px 20px 0);
    cursor: pointer;
    &:nth-of-type(5n+5){
      margin-right: 0;
    }
    &:nth-of-type(1n+16){
      margin-bottom: 0;
    }

    @include MOBILE{
      flex: 0 0 vw-m(24px);
      width: vw-m(24px);
      margin: vw-m( 0 20px 20px 0);
    }
  }

  &__item-input {
    display: none;
  }

  &__item-gui {
    position: relative;
    width: 100%;
    padding-bottom: 100%;
  }

  @at-root %PAINT-COLOR__CIRCLE {
    position: absolute;
    left: 0;
    right: 0;
    width: 100%;
    height: 100%;
    top: 0;
    bottom: 0;
    border-radius: 50%;
    margin: auto;
    transition: transform 0.2s;

  }

  &__item-border {
    @extend %PAINT-COLOR__CIRCLE;
    background: #ffffff;
    transform: scale(0.5);
    @include hover() {
      transform: scale(1);
    }
    @include selected() {
      transform: scale(1);
    }
  }
  &__item-color {
    @extend %PAINT-COLOR__CIRCLE;

    @include hover() {
      transform: scale(0.8);
    }
    @include selected() {
      transform: scale(0.9);
    }
  }
}
